TODO:
Clean my (luke) code up
Errors shouldn't just display a message, they should be properly handled
Get a real DB
REVOKE claims and messages after a certain date if private key leaked

BUGS:
The 'DB' allows adding a friend multiple times, no reason to fix because the
    whole thing needs rewriting as a real DB anyway
Key generation is deterministic

WARNINGS:
The client assumes a sensible UI is being used, not a CLI that allows breach of
protocol. Breaching protocol gives wierd effects, but should never happen with a
real UI.

OVERVIEW:
Parser should take messages like the following, and update the database:
    POST
    <signature>
    Hello, world!
in this case the parser should call Database.addPost with appropriate arguments

NetworkConnection should send and recieve data from the server

Crypto should do crypto, and make it as simple and easy as possible

GUI should use the DB to provide a simple user interface

Database should build a database from information passed to it by the parser,
and provide easy access to that data.

NetworkConnection
 - Runs in its own thread
GUI
 - Use the database to display a user interface
 - Display users walls
Parser
 - Wall posts
Database
 - Set up a database, none currently exists

REQUIREMENTS (Week 1 - 2)

Planning phase
- Scheduling: Produce a Gantt chart
- milestone identification ? (not sure if its part of the Gantt chart or not)
- risk assessment

Requirements
- Documentation
- Mission statement & objectives
- System boundary diagram
- User view and requirements
- System requirements
- transaction requirments
