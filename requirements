-== Implement a WOT system with levels of trust ==-

NB: 'friend' isn't special, but merely a group of public keys the user deems
friends. They may have other groups such as 'close friend', 'family', 'coworker'
etc.
When I here say group, I mean it in a different sense to a facebook group, but
more like a google+ circle. Once the data dictionary is drafted, I will rewrite
with standard terminology.

What we are doing:

Profile Data
    - Posted as a PDATA message to all who may view it
    - Different versions for different people/groups
    - New PDATA messages can update old values (change your name/email)
    
    Fields:
        - Names (not unique)
        - Username (unique)
        - Birthday
        - Sex
        - E-Mail

Account recovery:
    - Not possible without keypair, have GUI keep a backup or urge user to store
      a copy on a flash drive?

Posts:
    Users have walls
        Posting a message on their wall
            - all posts should be addressed to self so they can see their own posts
            - to a group
            - to a specific person or a list of people
            - never public, this breeds bad habbits
            - to themselves
        
        Posting to anothers wallComme
            - Is much the same as posting to your own.
        
        Sharing a link on their wall
            - displayed differently in GUI, client MUST NEVER thumbnail link or
              otherwise access it without EXPLICIT user consent (see tor/js
              exploit on freedom hosting by the USA and tracking techniques
              recently thwarted by GMail caching images)
            - can post a message along with the link
        
        - Can edit old posts (though old versions still available to malicious clients)
        - Can delete posts (though still available to malicious clients)
        - no pictures/video/audio
        
    Commenting
        - All wall posts may be commented on
        - Comments must be forwarded by original posters client to all the same
          recipients.
          (unless the original post contains a list of public keys who can see
          the message, look into this, single point of failure if implemented??)
    
    Liking
        - Any wall post may be liked. Likes are only visible to those whom you
          choose.
    
    Events
        Client posts a message to itself alterting it of an event, such as a
        birthday, interview, or other event.
    
People you know:
    Adding someone to a group (friend/family/coworker) is asymmetric. Just
      because you add them doesn't mean they've added you. You do not require
      consent.
    
    Known people are adding by adding their public key. See CLAIM/PDATA messages
    
    Allow user to manage their list of known people into groups such as friend,
      family, and cooworker.

Chat:
    Real time chat between users
    Allow posting messages to be delivered when user logs in
    Save past conversations
    Block users from messaging you (client actually just ignores their messages)

What we are not doing:

    //TODO
